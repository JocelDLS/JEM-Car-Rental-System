/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vehicle.rental.management.system;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultCellEditor;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author joker
 */
public class DriverManagement extends javax.swing.JInternalFrame {

    String path2 = null;

    /**
     * Creates new form DriverManagement
     */
    public DriverManagement() {
        initComponents();
        loadTableData();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        birthday = new com.toedter.calendar.JDateChooser();
        JoiningDate = new com.toedter.calendar.JDateChooser();
        licenseExpirydate = new com.toedter.calendar.JDateChooser();
        licenseIssuedate = new com.toedter.calendar.JDateChooser();
        jButton2 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        Fullname = new javax.swing.JTextField();
        Status = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        Licensenumber = new javax.swing.JTextField();
        Email = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        phone = new javax.swing.JTextField();
        Driverrole = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Address = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();

        setBorder(null);
        setPreferredSize(new java.awt.Dimension(870, 620));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        birthday.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(birthday, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 98, 200, 26));

        JoiningDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(JoiningDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(496, 60, 200, 26));

        licenseExpirydate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(licenseExpirydate, new org.netbeans.lib.awtextra.AbsoluteConstraints(251, 226, 200, 26));

        licenseIssuedate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(licenseIssuedate, new org.netbeans.lib.awtextra.AbsoluteConstraints(251, 170, 200, 24));

        jButton2.setText("Add Driver");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(724, 212, 140, 40));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Driver Role");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(496, 92, 105, -1));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel16.setText("Address");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 142, -1, -1));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("Full Name");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setText("Status");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(496, 150, 105, -1));

        Fullname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(Fullname, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 32, 200, -1));

        Status.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select status", "Active", "Inactive", "Suspended" }));
        getContentPane().add(Status, new org.netbeans.lib.awtextra.AbsoluteConstraints(496, 177, 200, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("License Number");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(251, 64, -1, -1));

        Licensenumber.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(Licensenumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(251, 98, 200, -1));

        Email.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(Email, new org.netbeans.lib.awtextra.AbsoluteConstraints(251, 32, 200, -1));

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel18.setText("License Expiry Date");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(251, 200, -1, -1));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setText("Phone Number");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 200, 105, -1));

        phone.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 226, 200, -1));

        Driverrole.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Driverrole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select driver role", "Full-time", "Part-time", "Contractor" }));
        getContentPane().add(Driverrole, new org.netbeans.lib.awtextra.AbsoluteConstraints(496, 118, 200, -1));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel15.setText("License Issue Date");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(251, 142, -1, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Date of Birth");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 64, -1, -1));

        Address.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(Address, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 168, 200, -1));

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel19.setText("Email");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(251, 6, -1, -1));

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel20.setText("Joining Date");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(496, 35, -1, -1));

        Table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Table.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Contact", "Address", "License Number", "Driver Status", "Action"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table.setRowHeight(40);
        Table.setSelectionBackground(new java.awt.Color(255, 102, 102));
        Table.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                TableAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane2.setViewportView(Table);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, 870, 330));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String fullName = Fullname.getText();
        String licensenumber = Licensenumber.getText();
        String address = Address.getText();
        String phoneNumber = phone.getText();
        String email = Email.getText();
        String driverRole = (String) Driverrole.getSelectedItem();
        String status = (String) Status.getSelectedItem();
        
        java.util.Date dob = birthday.getDate();
        java.util.Date licenseIssueDate = licenseIssuedate.getDate();
        java.util.Date licenseExpiryDate = licenseExpirydate.getDate();
        java.util.Date joiningDate = JoiningDate.getDate();
        
        try {
            
            if (fullName.isEmpty() || licensenumber.isEmpty() || address.isEmpty() || phoneNumber.isEmpty() || email.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please fill all required fields.");
                return;
            }
            
            File imageFile = new File(path2);
            if (!imageFile.exists() || !imageFile.canRead()) {
                JOptionPane.showMessageDialog(null, "Image file is invalid or not accessible.");
                return;
            }
            InputStream is = new FileInputStream(imageFile);
            if (dob == null || licenseIssueDate == null || licenseExpiryDate == null || joiningDate == null) {
                JOptionPane.showMessageDialog(null, "Please select all date fields.");
                return;
            }
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            java.sql.Connection conn = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/vehiclerental?zeroDateTimeBehavior=CONVERT_TO_NULL",
                "root",
                "password"
            );
            String sqlquery = "INSERT INTO drivers (full_name, license_number, date_of_birth, driver_role, address, phone_number, " +
                     "license_issue_date, license_expiry_date, status, joining_date, email, image) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement pst = conn.prepareStatement(sqlquery);
            
            pst.setString(1, fullName);
            pst.setString(2, licensenumber);
            pst.setDate(3, new java.sql.Date(dob.getTime()));
            pst.setString(4, driverRole);
            pst.setString(5, address);
            pst.setString(6, phoneNumber);
            pst.setDate(7, new java.sql.Date(licenseIssueDate.getTime()));
            pst.setDate(8, new java.sql.Date(licenseExpiryDate.getTime()));
            pst.setString(9, status);
            pst.setDate(10, new java.sql.Date(joiningDate.getTime()));
            pst.setString(11, email);
            pst.setBlob(12, is);
            
            pst.execute();
            
            JOptionPane.showMessageDialog(null, "Driver information saved successfully!");
            
            Fullname.setText("");
            Licensenumber.setText("");
            Address.setText("");
            phone.setText("");
            Email.setText("");
            Driverrole.setSelectedIndex(0); // Reset dropdown to the first option
            Status.setSelectedIndex(0);     // Reset dropdown to the first option
            birthday.setDate(null);         // Clear date picker
            licenseIssuedate.setDate(null); // Clear date picker
            licenseExpirydate.setDate(null);// Clear date picker
            JoiningDate.setDate(null);      // Clear date picker
            path2 = null; 
            
        } catch (Exception e) {
            e.printStackTrace(); // For debugging
            JOptionPane.showMessageDialog(null, "An error occurred: " + e.getMessage());
        }   
    }//GEN-LAST:event_jButton2ActionPerformed

    private void TableAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_TableAncestorAdded
        // TODO add your handling code here:
        loadTableData();
    }//GEN-LAST:event_TableAncestorAdded

    private void loadTableData() {
        try {
            // Database connection
            Class.forName("com.mysql.cj.jdbc.Driver");
            java.sql.Connection conn = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/vehiclerental?zeroDateTimeBehavior=CONVERT_TO_NULL",
                "root",
                "password"
            );

            // SQL Query to fetch all drivers
            String sqlquery = "SELECT full_name, phone_number, address, email, license_number, status FROM drivers";
            PreparedStatement pst = conn.prepareStatement(sqlquery);
            var rs = pst.executeQuery();

            // Get the table model
            DefaultTableModel tableModel = (DefaultTableModel) Table.getModel();

            // Clear existing rows
            tableModel.setRowCount(0);

            // Populate table with data from the database
            while (rs.next()) {
                String name = rs.getString("full_name");
                String contact = rs.getString("phone_number");
                String address = rs.getString("address");
                String licenseNumber = rs.getString("license_number");
                String status = rs.getString("status");
                

                tableModel.addRow(new Object[]{name, contact, address, licenseNumber, status, "Edit/Delete"});
            }
            rs.close();
            pst.close();
            conn.close();

             // Add custom renderer and editor for the action column (column 5)
            Table.getColumnModel().getColumn(5).setCellRenderer(new ButtonRenderer());
            Table.getColumnModel().getColumn(5).setCellEditor(new ButtonEditor(new JCheckBox()));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error loading table data: " + e.getMessage());
            e.printStackTrace();
        }
    }

    // Custom button renderer
    class ButtonRenderer extends JButton implements TableCellRenderer {
        public ButtonRenderer() {
            setOpaque(true);
        }

        public Component getTableCellRendererComponent(JTable table, Object value,
                                                       boolean isSelected, boolean hasFocus, int row, int column) {
            setText((value == null) ? "" : value.toString());
            return this;
        }
    }

    class ButtonEditor extends DefaultCellEditor {
        protected JButton button;
        private String label;
        private boolean isPushed;
        private int row, col;

        public ButtonEditor(JCheckBox checkBox) {
            super(checkBox);
            button = new JButton();
            button.setOpaque(true);

            button.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    fireEditingStopped();
                }
            });
    }

    public Component getTableCellEditorComponent(JTable table, Object value,
                                                 boolean isSelected, int row, int column) {
        this.row = row;
        this.col = column;
        label = (value == null) ? "" : value.toString();
        button.setText(label);
        isPushed = true;
        return button;
    }

   public Object getCellEditorValue() {
        if (isPushed) {
            int row = Table.getSelectedRow(); // Fixed Table reference
            String licenseNumber = (String) Table.getValueAt(row, 4);
            int option = JOptionPane.showOptionDialog(button, "Choose an action", "Edit/Delete",
                    JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null,
                    new String[]{"Edit Status", "Delete"}, "Edit Status");
            if (option == 0) {
                editDriverStatus(licenseNumber);
            } else if (option == 1) {
                deleteDriver(licenseNumber);
            }
        }
        isPushed = false;
        return label;
    }


    public boolean stopCellEditing() {
        isPushed = false;
        return super.stopCellEditing();
    }

    protected void fireEditingStopped() {
        super.fireEditingStopped();
    }
}

    private void editDriverStatus(String licenseNumber) {
        String[] options = {"Available", "On Duty", "On Leave", "Suspended"};
        String newStatus = (String) JOptionPane.showInputDialog(null, "Select new status:",
                "Edit Driver Status", JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        if (newStatus != null) {
            updateDriverStatus(licenseNumber, newStatus);
        }
    }

    private void updateDriverStatus(String licenseNumber, String newStatus) {
        String sqlquery = "UPDATE drivers SET status = ? WHERE license_number = ?";
        try (Connection conn = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/vehiclerental?zeroDateTimeBehavior=CONVERT_TO_NULL", "root", "password");
             PreparedStatement pst = conn.prepareStatement(sqlquery)) {

            pst.setString(1, newStatus);
            pst.setString(2, licenseNumber);
            pst.executeUpdate();
            loadTableData(); // Reload the table to reflect changes
            JOptionPane.showMessageDialog(null, "Driver status updated successfully!");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error updating driver status: " + e.getMessage());
            e.printStackTrace();
        }
    }

    private void deleteDriver(String licenseNumber) {
        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this driver?",
                "Confirm Delete", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            deleteDriverFromDatabase(licenseNumber);
        }
    }

    private void deleteDriverFromDatabase(String licenseNumber) {
        String sqlquery = "DELETE FROM drivers WHERE license_number = ?";
        try (Connection conn = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/vehiclerental?zeroDateTimeBehavior=CONVERT_TO_NULL",
                "root",
                "password");
             PreparedStatement pst = conn.prepareStatement(sqlquery)) {

            pst.setString(1, licenseNumber);
            pst.executeUpdate();
            loadTableData(); // Reload the table to reflect changes
            JOptionPane.showMessageDialog(null, "Driver deleted successfully!");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error deleting driver: " + e.getMessage());
            e.printStackTrace();
        }
    }




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Address;
    private javax.swing.JComboBox<String> Driverrole;
    private javax.swing.JTextField Email;
    private javax.swing.JTextField Fullname;
    private com.toedter.calendar.JDateChooser JoiningDate;
    private javax.swing.JTextField Licensenumber;
    private javax.swing.JComboBox<String> Status;
    private javax.swing.JTable Table;
    private com.toedter.calendar.JDateChooser birthday;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JDateChooser licenseExpirydate;
    private com.toedter.calendar.JDateChooser licenseIssuedate;
    private javax.swing.JTextField phone;
    // End of variables declaration//GEN-END:variables
}
