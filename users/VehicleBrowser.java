/*
// * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
// * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
*/
package vehicle.rental.management.system.users;

import java.awt.Color;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.awt.GridLayout;
import java.awt.Insets;
import javax.swing.ImageIcon;
import javax.swing.JScrollPane;
import vehicle.rental.management.system.users.component.ModelItem;
import javax.swing.plaf.basic.BasicInternalFrameUI;

/*
 *
 * @author joker
*/
public class VehicleBrowser extends javax.swing.JFrame {


    /**
     * Creates new form VehicleBrowser
     */
   public VehicleBrowser() {
        initComponents();
        List<ModelItem> vehicles = fetchVehiclesFromDatabase();
        displayVehicles(vehicles);
    }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LogoutBTN = new javax.swing.JButton();
        GaraggeBTN = new javax.swing.JButton();
        HomeBTN = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        item1 = new vehicle.rental.management.system.users.component.item();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LogoutBTN.setText("Log out");
        LogoutBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutBTNActionPerformed(evt);
            }
        });
        getContentPane().add(LogoutBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 20, -1, 30));

        GaraggeBTN.setText("Garagge");
        GaraggeBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GaraggeBTNActionPerformed(evt);
            }
        });
        getContentPane().add(GaraggeBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 20, -1, 30));

        HomeBTN.setText("Home");
        HomeBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeBTNActionPerformed(evt);
            }
        });
        getContentPane().add(HomeBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 20, -1, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vehicle/rental/management/system/assets/l__3_-removebg-preview.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 100, 50));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(item1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(878, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(item1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(332, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 900, 540));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vehicle/rental/management/system/assets/Screenshot 2024-12-04 165915 (1).png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void LogoutBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutBTNActionPerformed
        // TODO add your handling code here:
        dispose();
        new Login().setVisible(true);
    }//GEN-LAST:event_LogoutBTNActionPerformed

    private void GaraggeBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GaraggeBTNActionPerformed
        // TODO add your handling code here:
        RentalHistory RH = new RentalHistory();
        RH.setVisible(true);
        dispose();
    }//GEN-LAST:event_GaraggeBTNActionPerformed

    private void HomeBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeBTNActionPerformed
        // TODO add your handling code here:
        dispose();
        new VehicleBrowser().setVisible(true);
    }//GEN-LAST:event_HomeBTNActionPerformed
    
    
    
     private List<ModelItem> fetchVehiclesFromDatabase() {
        List<ModelItem> vehicles = new ArrayList<>();
        String query = "SELECT * FROM vehicle";

        try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/vehiclerental?zeroDateTimeBehavior=CONVERT_TO_NULL",
                "root",
                "password");
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(query)) {

            while (rs.next()) {
                ModelItem vehicle = new ModelItem();
                vehicle.setVehicle_id(rs.getInt("vehicle_id"));
                vehicle.setBrand(rs.getString("brand"));
                vehicle.setModel(rs.getString("model"));
                vehicle.setTransmission(rs.getString("transmission"));
                vehicle.setPrice_per_day(rs.getInt("price_per_day"));
                vehicle.setYear(rs.getInt("year"));
                vehicle.setVehicle_type(rs.getString("vehicle_type"));
                vehicle.setSeating_capacity(rs.getInt("seating_capacity"));
                vehicle.setRegistration_number(rs.getString("Registration_number"));

                byte[] imageBytes = rs.getBytes("image");
                if (imageBytes != null && imageBytes.length > 0) {
                    ImageIcon imageIcon = new ImageIcon(imageBytes);
                    vehicle.setImage(imageIcon);
                } else {
                    vehicle.setImage(new ImageIcon(getClass().getResource("/vehicle/rental/management/system/assets/default_car.png")));
                }

                vehicles.add(vehicle);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error fetching vehicles: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }

        return vehicles;
    }

    private void displayVehicles(List<ModelItem> vehicles) {
        JPanel vehiclePanel = new JPanel(new GridLayout(0, 3, 10, 10));
        for (ModelItem vehicle : vehicles) {
            vehicle.rental.management.system.users.component.item vehicleItem = new vehicle.rental.management.system.users.component.item();
            vehicleItem.setData(vehicle);
            
            vehicleItem.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    openRentalBooking(vehicle);
                }
            });
            
            vehiclePanel.add(vehicleItem);
        }
        jScrollPane2.setViewportView(vehiclePanel);
    }

    private void openRentalBooking(ModelItem selectedVehicle) {
        RentalBooking rentalBooking = new RentalBooking(selectedVehicle);
        rentalBooking.setVisible(true);
        this.dispose();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VehicleBrowser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VehicleBrowser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VehicleBrowser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VehicleBrowser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VehicleBrowser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GaraggeBTN;
    private javax.swing.JButton HomeBTN;
    private javax.swing.JButton LogoutBTN;
    private vehicle.rental.management.system.users.component.item item1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
